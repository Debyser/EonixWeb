faire un ajout d'une company avec une liste de contacts  ,  

page 9. 4 public record CompanyForCreationDto(string Name, string Address, string Country, IEnumerable<EmployeeForCreationDto> Employees);44 
get contact in contactRepo Employee GetEmployee(Guid companyId, Guid id, bool trackChanges); GetEmployeeForCompany in controller ContactController [HttpGet("{id:guid}")]
faire les transactions => done , plus qu'à l'appliquer partout 


- faire le alter table pour le delete en cascade ou pas ???
non , faire un delete logique ! rajout d'une colonne active à true par défaut

avant le token :

faut gérer le pool, la connexion de manière + performante
pour tracer les sessions 
tu vas nommer la conn string ?? demander à Steph ce que ça veut dire

faudrait une version pro des gestions des ressources , regarder dans Ef la gestion des connexions dans EF 

1 tu fais le constat qu'a chaque query , il ouvre et ferme une connection
2 tu trouves une solution pour améliorer via l'ioc


 - pas de loggerService , il faut utiliser les exception via des filters sur api (exceptionFilter)
 - Ioc ajouter Fluent Validator
        // TOdo: get companyById => tous ce qui est dans compagnie (list des contacts , name de la compagnie)
 // todo : ajouter le numero de statut code directement en attribut


 1) virer tous les dto en VIEWMODEL : done 
 2) pas de logger service , exception filter sur api : https://learn.microsoft.com/en-us/ef/core/performance/advanced-performance-topics?tabs=with-di%2Cwith-constant
 3) lire doc rest api standard
 4) rajouter le stack strace dans les logs
 5) connection pool
 6) bear token avec oauth2 
 7) rajout d'une colonne Active pour suppression logique
 8) GetCompangyById : done
 9) Verb option Web Api
 10) web socket 
 11) Http/2